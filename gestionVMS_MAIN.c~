//#########################################################
//#
//# Titre : 	UTILITAIRES (MAIN) TP1 LINUX Automne 21
//#				SIF-1015 - Système d'exploitation
//#				Université du Québec à Trois-Rivières
//#            VERSION CONCURRENTE
//#
//# Auteur : 	Miriam Davydov et Harve Leka
//#	Date :   2021-11-17
//#
//# Langage : 	ANSI C on LINUX 
//#
//#######################################

#include "gestionListeChaineeVMS.h"
#include "gestionVMS.h"
#include "curses.h"

struct noeud* head; // Pointeur de tête de liste
struct noeud* queue; // Pointeur de queue de liste pour ajout rapide
int nbVM, nbThreadAELX; // nombre de VM actives et nombre de threads actifs A E L X

sem_t semH, semQ, semnbVM, semC, semnbThreadAELX;

void initialisation() {
	head = NULL;
	queue = NULL;
	nbVM = 0;
	nbThreadAELX = 0;

	sem_init(&semH, 0, 1);
	sem_init(&semQ, 0, 1);
	sem_init(&semnbVM, 0, 1);
	sem_init(&semC, 0, 1);
	sem_init(&semnbThreadAELX, 0, 1);
}

int main(int argc, char* argv[]){
	initialisation();

	WINDOW *client;
	WINDOW *serveur;
	int WIDTH = 60;
	int HIGHT = 35;
	int x_loop;
	int y_loop;
	char pattern = '.';

	initscr();

	move(5, 5);
	refresh();

	for (x_loop = 0; x_loop < COLS - 1; x_loop++) {
		for (y_loop = 0; y_loop < LINES - 1; y_loop++) {
			mvwaddch(stdscr, y_loop, x_loop, pattern);
		}
	}

	refresh();
	sleep(2);

	client = newwin(HIGHT, WIDTH, 0, 0);
	box(client, '|', '=');
	mvwprintw(client, 2, 2, "%s", "Enter transaction:");
	char response[100];
	wgetstr(client, response);
	mvwprintw(client, 10, 2, "%s", response);



	wrefresh(client);
	sleep(2);

	refresh(); // appel le background
	sleep(2);

	touchwin(client); // Ramene moi la fenetre de tantot
	wrefresh(client);
	sleep(2);

	serveur = newwin(HIGHT, WIDTH, 0, WIDTH + 5);
	box(serveur, '|', '-');
	mvwprintw(serveur, 5, 2, "%s", "Pop up window");
	wrefresh(serveur);
	sleep(2);

	touchwin(client);
	wrefresh(client);
	sleep(2);

	wclear(client);
	wrefresh(client);
	sleep(2);

	delwin(client); // delete window

	touchwin(serveur);
	wrefresh(serveur);
	sleep(2);

	delwin(serveur);

	touchwin(stdscr);
	refresh();
	sleep(2);

	endwin();

	//readTrans(argv[1]);

	exit( 0);
}
